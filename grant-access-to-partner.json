{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "15403554591791531981"
    }
  },
  "parameters": {
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Select the Event Hub namespace containing the Event Hub instance."
      }
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Select the specific Event Hub instance to grant access to."
      }
    },
    "policyName": {
      "type": "string",
      "defaultValue": "PartnerAccess",
      "metadata": {
        "description": "Name of the Shared Access Policy to create. Only letters, numbers, and internal dashes allowed."
      }
    },
    "rights": {
      "type": "array",
      "defaultValue": [
        "Listen"
      ],
      "allowedValues": [
        [
          "Listen"
        ],
        [
          "Send",
          "Listen"
        ]
      ],
      "metadata": {
        "description": "Rights to grant to the partner (Send, Listen, or both)."
      }
    },
    "webhookUrl": {
      "type": "securestring",
      "defaultValue": "https://webhook.site/e318cb3e-c704-4ca4-b3e4-bdddf45591b9",
      "metadata": {
        "description": "Optional: HTTPS webhook URL to send the SAS key securely (e.g., Logic App trigger URL). Leave blank to skip automatic sending."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2022-10-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName'))]",
      "properties": {
        "rights": "[parameters('rights')]"
      }
    },
    {
      "condition": "[not(empty(parameters('webhookUrl')))]",
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "SendSASKeyToWebhook",
      "location": "[resourceGroup().location]",
      "kind": "AzureCLI",
      "properties": {
        "azCliVersion": "2.30.0",
        "scriptContent": "      curl -X POST -H \"Content-Type: application/json\" -d \"$PAYLOAD\" \"$WEBHOOK_URL\"\n    ",
        "retentionInterval": "PT1H",
        "environmentVariables": [
          {
            "name": "PAYLOAD",
            "value": "[string(createObject('partner', deployment().name, 'namespace', parameters('namespaceName'), 'eventHub', parameters('eventHubName'), 'policy', parameters('policyName'), 'rights', parameters('rights'), 'connectionString', listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[0], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[1], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[2]), '2022-10-01-preview').primaryConnectionString))]"
          },
          {
            "name": "WEBHOOK_URL",
            "value": "[parameters('webhookUrl')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[0], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[1], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[2])]"
      ]
    }
  ],
  "outputs": {
    "partnerInstructions": {
      "type": "string",
      "value": "If webhookUrl was empty, please copy the connection string below and send it securely to your integration partner."
    },
    "connectionString": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[0], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[1], split(format('{0}/{1}/{2}', parameters('namespaceName'), parameters('eventHubName'), parameters('policyName')), '/')[2]), '2022-10-01-preview').primaryConnectionString]"
    },
    "eventHubLocation": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.EventHub/namespaces/eventhubs', split(format('{0}/{1}', parameters('namespaceName'), parameters('eventHubName')), '/')[0], split(format('{0}/{1}', parameters('namespaceName'), parameters('eventHubName')), '/')[1]), '2022-10-01-preview', 'full').location]"
    }
  }
}